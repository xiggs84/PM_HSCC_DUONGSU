package vn.vnpt.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QuanHeNhanThanAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuanHeNhanThanAllPropertiesEquals(QuanHeNhanThan expected, QuanHeNhanThan actual) {
        assertQuanHeNhanThanAutoGeneratedPropertiesEquals(expected, actual);
        assertQuanHeNhanThanAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuanHeNhanThanAllUpdatablePropertiesEquals(QuanHeNhanThan expected, QuanHeNhanThan actual) {
        assertQuanHeNhanThanUpdatableFieldsEquals(expected, actual);
        assertQuanHeNhanThanUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuanHeNhanThanAutoGeneratedPropertiesEquals(QuanHeNhanThan expected, QuanHeNhanThan actual) {
        assertThat(expected)
            .as("Verify QuanHeNhanThan auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuanHeNhanThanUpdatableFieldsEquals(QuanHeNhanThan expected, QuanHeNhanThan actual) {
        assertThat(expected)
            .as("Verify QuanHeNhanThan relevant properties")
            .satisfies(e -> assertThat(e.getIdQuanHe()).as("check idQuanHe").isEqualTo(actual.getIdQuanHe()))
            .satisfies(e -> assertThat(e.getDienGiai()).as("check dienGiai").isEqualTo(actual.getDienGiai()))
            .satisfies(e -> assertThat(e.getIdQuanHeDoiUng()).as("check idQuanHeDoiUng").isEqualTo(actual.getIdQuanHeDoiUng()))
            .satisfies(e -> assertThat(e.getIdGioiTinh()).as("check idGioiTinh").isEqualTo(actual.getIdGioiTinh()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuanHeNhanThanUpdatableRelationshipsEquals(QuanHeNhanThan expected, QuanHeNhanThan actual) {}
}
