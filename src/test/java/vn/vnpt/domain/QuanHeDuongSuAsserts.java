package vn.vnpt.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QuanHeDuongSuAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuanHeDuongSuAllPropertiesEquals(QuanHeDuongSu expected, QuanHeDuongSu actual) {
        assertQuanHeDuongSuAutoGeneratedPropertiesEquals(expected, actual);
        assertQuanHeDuongSuAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuanHeDuongSuAllUpdatablePropertiesEquals(QuanHeDuongSu expected, QuanHeDuongSu actual) {
        assertQuanHeDuongSuUpdatableFieldsEquals(expected, actual);
        assertQuanHeDuongSuUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuanHeDuongSuAutoGeneratedPropertiesEquals(QuanHeDuongSu expected, QuanHeDuongSu actual) {
        assertThat(expected)
            .as("Verify QuanHeDuongSu auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuanHeDuongSuUpdatableFieldsEquals(QuanHeDuongSu expected, QuanHeDuongSu actual) {
        assertThat(expected)
            .as("Verify QuanHeDuongSu relevant properties")
            .satisfies(e -> assertThat(e.getIdDuongSu()).as("check idDuongSu").isEqualTo(actual.getIdDuongSu()))
            .satisfies(e -> assertThat(e.getIdDuongSuQh()).as("check idDuongSuQh").isEqualTo(actual.getIdDuongSuQh()))
            .satisfies(e -> assertThat(e.getIdQuanHe()).as("check idQuanHe").isEqualTo(actual.getIdQuanHe()))
            .satisfies(e -> assertThat(e.getThongTinQuanHe()).as("check thongTinQuanHe").isEqualTo(actual.getThongTinQuanHe()))
            .satisfies(e -> assertThat(e.getTrangThai()).as("check trangThai").isEqualTo(actual.getTrangThai()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuanHeDuongSuUpdatableRelationshipsEquals(QuanHeDuongSu expected, QuanHeDuongSu actual) {}
}
